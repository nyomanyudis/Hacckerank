import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    //static int getMoneySpent(int[] keyboards, int[] drives, int s){
        // Complete this function
   // }
    
    public static void Bubblesort(int[] array,int total){
        int temp = 0;
        int flag = 0;
        
        for(int i=0;i<total-1;i++){
            for(int j=0;j<total-1-i;j++){
                if(array[j]>array[j+1]){
                     temp = array[j] + array[j+1]; 
                     array[j] = temp - array[j];
                     array[j+1] = temp - array[j+1];
                     flag = 1;
                }
            }
            if(flag==0)
                break;
            flag = 0;
        }
    }
    
    public static int findTheBest(int[] arrayA,int[] arrayB,int totalA,int totalB,int money){
        int total = 0;
        
        for(int j=totalB-1;j>=0;j--){
            for(int i=totalA-1;i>=0;i--){
                if(arrayA[i]+arrayB[j]<=money){
                    total = arrayA[i]+arrayB[j];
                    break;
                }
            }
        }
        return total;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int s = in.nextInt();
        int n = in.nextInt();
        int m = in.nextInt();
        int[] keyboards = new int[n];
        for(int keyboards_i=0; keyboards_i < n; keyboards_i++){
            keyboards[keyboards_i] = in.nextInt();
        }
        int[] drives = new int[m];
        for(int drives_i=0; drives_i < m; drives_i++){
            drives[drives_i] = in.nextInt();
        }
        
        Bubblesort(keyboards,n);
        Bubblesort(drives,m);
        
        int totalDrives = findTheBest(keyboards,drives,n,m,s); 
        int totalKeyboards = findTheBest(drives,keyboards,m,n,s); 
        
        if(totalDrives == 0 && totalKeyboards == 0){
            System.out.println("-1");
        }
        else if(totalDrives > totalKeyboards){
            System.out.println(totalDrives);
        }
        else if(totalKeyboards > totalDrives){
            System.out.println(totalKeyboards);
        }
        
        //System.out.println("totalDrives : "+totalDrives);
        //System.out.println("totalKeyboards : "+totalKeyboards);
        
        //for(int i=0;i<n;i++){
            //System.out.println("keyboards "+i+" : "+keyboards[i]);
        //}
        
        //for(int i=0;i<m;i++){
            //System.out.println("drives "+i+" : "+drives[i]);
        //}
        //  The maximum amount of money she can spend on a keyboard and USB drive, or -1 if she can't purchase both items
        //int moneySpent = getMoneySpent(keyboards, drives, s);
        //System.out.println(moneySpent);
    }
}
